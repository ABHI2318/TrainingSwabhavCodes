package com.aurion.test;

import com.aurion.model.ContactManagementFacade;
import com.aurion.model.IContactManager;
import com.aurion.model.IUserManager;
import com.aurion.model.User;
import com.aurion.model.contact;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class App implements IUserManager, IContactManager {

    private static Scanner scanner = new Scanner(System.in);
    private static List<User> users = new ArrayList<>();
    private static ContactManagementFacade facade;

    public static void main(String[] args) {
        App app = new App();
        facade = new ContactManagementFacade(app, app);
        facade.addUserDetails(); // Use facade here
        app.manageContactsApp();  // Facade is used for managing contacts
    }

    private void manageContactsApp() {
        boolean continueApp = true;

        while (continueApp) {
            User selectedUser = facade.selectUser();  // Use facade here
            if (selectedUser == null) {
                continueApp = false;
                break;
            }

            facade.manageUserContacts(selectedUser);  // Use facade here

            System.out.print("Do you want to exit the application? (y/n): ");
            if (scanner.next().equalsIgnoreCase("y")) {
                continueApp = false;
            }
        }
    }

    // Implement IUserManager methods
    @Override
    public void addUserDetails() {
        System.out.print("How many users would you like to add? ");
        int numberOfUsers = scanner.nextInt();
        scanner.nextLine();

        for (int i = 0; i < numberOfUsers; i++) {
            System.out.println("Enter details for User " + (i + 1) + ": ");
            System.out.print("User ID: ");
            int userId = scanner.nextInt();
            scanner.nextLine();
            System.out.print("First Name: ");
            String firstName = scanner.nextLine();
            System.out.print("Last Name: ");
            String lastName = scanner.nextLine();

            users.add(new User(userId, firstName, lastName, true));
        }
    }

    @Override
    public User selectUser() {
        System.out.println("Select a user to manage contacts:");
        for (User user : users) {
            System.out.println(user.getUserId() + ": " + user.getFirstName() + " " + user.getLastName());
        }

        System.out.print("Enter User ID or 0 to exit: ");
        int userId = scanner.nextInt();
        scanner.nextLine();

        if (userId == 0) {
            return null;
        }

        for (User user : users) {
            if (user.getUserId() == userId) {
                return user;
            }
        }

        return null;
    }

    @Override
    public void displayContacts(User user) {
        if (user.getContacts().isEmpty()) {
            System.out.println("No contacts available for this user.");
        } else {
            System.out.println("Contacts for " + user.getFirstName() + " " + user.getLastName() + ":");
            for (contact contact : user.getContacts()) {
                System.out.println(contact.getContact_id() + ": " + contact.getFirstName() + " " + contact.getLastName());
            }
        }
    }

    // Implement IContactManager methods
    @Override
    public void addContact(User user) {
        // Your existing addContact implementation here
    }

    @Override
    public void removeContact(User user) {
        // Your existing removeContact implementation here
    }

    @Override
    public void updateContact(User user) {
        // Optional: add your updateContact logic here if needed
    }

    @Override
    public void manageUserContacts(User user) {
        // Your existing manageUserContacts implementation here
    }
}